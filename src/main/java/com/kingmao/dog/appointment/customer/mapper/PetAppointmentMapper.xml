<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingmao.dog.appointment.customer.mapper.PetAppointmentMapper">
  <resultMap id="BaseResultMap" type="com.kingmao.dog.appointment.customer.model.PetAppointment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="appointment_id" jdbcType="INTEGER" property="appointmentId" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="kind_pet" jdbcType="VARCHAR" property="kindPet" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="kind_service" jdbcType="VARCHAR" property="kindService" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="name_pet" jdbcType="VARCHAR" property="namePet" />
    <result column="photo_pet" jdbcType="VARCHAR" property="photoPet" />
    <result column="enabled" jdbcType="INTEGER" property="enabled" />
  </resultMap>
  <sql id="Base_Column_List">
    id, appointment_id, openid, kind_pet, size, kind_service, comment, name_pet, photo_pet, 
    enabled
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pet_appointment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pet_appointment
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kingmao.dog.appointment.customer.model.PetAppointment">
    insert into pet_appointment (id, appointment_id, openid, 
      kind_pet, size, kind_service, 
      comment, name_pet, photo_pet, 
      enabled)
    values (#{id,jdbcType=INTEGER}, #{appointmentId,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, 
      #{kindPet,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, #{kindService,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{namePet,jdbcType=VARCHAR}, #{photoPet,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kingmao.dog.appointment.customer.model.PetAppointment">
    insert into pet_appointment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appointmentId != null">
        appointment_id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="kindPet != null">
        kind_pet,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="kindService != null">
        kind_service,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="namePet != null">
        name_pet,
      </if>
      <if test="photoPet != null">
        photo_pet,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appointmentId != null">
        #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="kindPet != null">
        #{kindPet,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="kindService != null">
        #{kindService,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="namePet != null">
        #{namePet,jdbcType=VARCHAR},
      </if>
      <if test="photoPet != null">
        #{photoPet,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kingmao.dog.appointment.customer.model.PetAppointment">
    update pet_appointment
    <set>
      <if test="appointmentId != null">
        appointment_id = #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="kindPet != null">
        kind_pet = #{kindPet,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="kindService != null">
        kind_service = #{kindService,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="namePet != null">
        name_pet = #{namePet,jdbcType=VARCHAR},
      </if>
      <if test="photoPet != null">
        photo_pet = #{photoPet,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kingmao.dog.appointment.customer.model.PetAppointment">
    update pet_appointment
    set appointment_id = #{appointmentId,jdbcType=INTEGER},
      openid = #{openid,jdbcType=VARCHAR},
      kind_pet = #{kindPet,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      kind_service = #{kindService,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      name_pet = #{namePet,jdbcType=VARCHAR},
      photo_pet = #{photoPet,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="insertPetAppList" parameterType="java.util.List">
    insert into pet_appointment
    (appointment_id,openid,kind_pet,size,kind_service,comment,name_pet,photo_pet)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.appointmentId},
      #{item.openid},
      #{item.kindPet},
      #{item.size},
      #{item.kindService},
      #{item.comment},
      #{item.namePet},
      #{item.photoPet})
    </foreach>
  </insert>

  <delete id="deleteByAppointmentId" parameterType="java.lang.Integer">
    delete from pet_appointment
    where appointment_id = #{appointmentId,jdbcType=INTEGER}
  </delete>
</mapper>